openapi: "3.0.2"
info:
  title: Bike Noritai API
  description: |
    - Bike Noritai のAPI
    - [bike-noritaiフロント](https://github.com/tatsuro1997/bike-noritai)
  version: "1.0"
servers:
  - url: http://localhost:8080
paths:
  "/api/users":
    get:
      description: ユーザー一覧取得
      operationId: UserIndex
      responses:
        "200":
          description: ユーザー一覧
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    post:
      description: ユーザー登録
      operationId: UserCreate
      requestBody:
        $ref: "#/components/requestBodies/User"
      responses:
        "201":
          description: Created

  "/api/users/{user_id}":
    get:
      description: ユーザー詳細
      operationId: UserShow
      parameters:
        [$ref: "#/components/parameters/UserId"]
      responses:
        "200":
          description: ユーザーデータ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    patch:
      description: ユーザー更新
      operationId: UserUpdate
      parameters:
        [$ref: "#/components/parameters/UserId"]
      requestBody:
        $ref: "#/components/requestBodies/User"
      responses:
        "204":
          description: No Content
    delete:
      description: ユーザー削除
      operationId: UserDelete
      parameters:
        [$ref: "#/components/parameters/UserId"]
      responses:
        "204":
          description: No Content

  "/api/spots":
    get:
      description: スポット一覧取得
      operationId: SpotIndex
      responses:
        "200":
          description: スポットデータ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Spot"

  "/api/spots/{spot_id}":
    get:
      description: スポット詳細取得
      operationId: SpotShow
      parameters:
        [$ref: "#/components/parameters/SpotId"]
      responses:
        "200":
          description: スポットデータ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Spot"

  "/api/users/{user_id}/spots":
    get:
      description:  ユーザー毎スポット一覧取得
      operationId: User/SpotIndex
      parameters:
        [
          $ref: "#/components/parameters/UserId",
        ]
      responses:
        "200":
          description: スポットデータ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Spot"
    post:
      description: スポット登録
      operationId: SpotCreate
      parameters:
        [
          $ref: "#/components/parameters/UserId",
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Spot"
      responses:
        "201":
          description: Created

  "/api/users/{user_id}/spots/{spot_id}":
    patch:
      description: スポット更新
      operationId: SpotUpdate
      parameters:
        [
          $ref: "#/components/parameters/UserId",
          $ref: "#/components/parameters/SpotId"
        ]
      requestBody:
        $ref: "#/components/requestBodies/Spot"
      responses:
        "204":
          description: No Content
    delete:
      description: スポット削除
      operationId: SpotDelete
      parameters:
        [
          $ref: "#/components/parameters/UserId",
          $ref: "#/components/parameters/SpotId"
        ]
      responses:
        "204":
          description: No Content

  "/api/users/{user_id}/records":
    get:
      description: ツーリング記録一覧取得
      operationId: User/RecordIndex
      parameters:
        [
          $ref: "#/components/parameters/UserId",
        ]
      responses:
        "200":
          description: ツーリング記録データ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Record"
    post:
      description: ツーリング記録登録
      operationId: RecordCreate
      parameters:
        [
          $ref: "#/components/parameters/UserId",
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Spot"
      responses:
        "201":
          description: Created

  "/api/users/{user_id}/records/{record_id}":
    get:
      description: ツーリング記録詳細
      operationId: RecordShow
      parameters:
        [
          $ref: "#/components/parameters/UserId",
          $ref: "#/components/parameters/RecordId"
        ]
      responses:
        "200":
          description: ツーリング記録データ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Record"
    patch:
      description: ツーリング記録更新
      operationId: RecordUpdate
      parameters:
        [
          $ref: "#/components/parameters/UserId",
          $ref: "#/components/parameters/RecordId"
        ]
      requestBody:
        $ref: "#/components/requestBodies/Record"
      responses:
        "204":
          description: No Content
    delete:
      description: ツーリング記録削除
      operationId: RecordDelete
      parameters:
        [
          $ref: "#/components/parameters/UserId",
          $ref: "#/components/parameters/RecordId"
        ]
      responses:
        "204":
          description: No Content

  "/api/users/{user_id}/records/{record_id}/record_likes":
    get:
      description: ツーリングいいね数
      operationId: RecordLikeCount
      parameters:
        [
          $ref: "#/components/parameters/UserId",
          $ref: "#/components/parameters/RecordId"
        ]
      responses:
        "200":
          description: ツーリング記録データ数
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    format: int64

  "/api/users/{user_id}/comments":
    get:
      description: ユーザー毎コメント一覧
      operationId: CommentIndex
      parameters:
        [
          $ref: "#/components/parameters/UserId",
        ]
      responses:
        "200":
          description: コメントデータ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"

  "/api/users/{user_id}/records/{record_id}/comments":
    get:
      description: コメント一覧
      operationId: UserCommentIndex
      parameters:
        [
          $ref: "#/components/parameters/UserId",
          $ref: "#/components/parameters/RecordId"
        ]
      responses:
        "200":
          description: コメントデータ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
    post:
      description: コメント作成
      operationId: CommentCreate
      parameters:
        [
          $ref: "#/components/parameters/UserId",
          $ref: "#/components/parameters/RecordId"
        ]
      requestBody:
        $ref: "#/components/requestBodies/Comment"
      responses:
        "201":
          description: Created
    patch:
      description: コメント更新
      operationId: CommentUpdate
      parameters:
        [
          $ref: "#/components/parameters/UserId",
          $ref: "#/components/parameters/RecordId"
        ]
      requestBody:
        $ref: "#/components/requestBodies/Comment"
      responses:
        "204":
          description: No Content
    delete:
      description: コメント削除
      operationId: CommentDelete
      parameters:
        [
          $ref: "#/components/parameters/UserId",
          $ref: "#/components/parameters/RecordId"
        ]
      responses:
        "204":
          description: No Content

  "/api/users/{user_id}/spots/{spot_id}/bookmarks":
    get:
      description: スポットブックマーク
      operationId: BookmarkIndex
      parameters:
        [
          $ref: "#/components/parameters/UserId",
          $ref: "#/components/parameters/SpotId"
        ]
      responses:
        "200":
          description: ブックマークデータ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bookmark"

components:
  parameters:
    UserId:
      name: user_id
      in: path
      required: true
      schema:
        type: integer
      description: ユーザーID
    SpotId:
      name: spot_id
      in: path
      required: true
      schema:
        type: integer
      description: スポットID
    RecordId:
      name: record_id
      in: path
      required: true
      schema:
        type: integer
      description: レコードID

  requestBodies:
    User:
      content:
        application/json:
          schema:
            type: object
            required:
              - "name"
              - "password"
            properties:
              email:
                type: string
              password:
                type: string
              name:
                type: string
              area:
                type: string
              prefecture:
                type: string
              url:
                type: string
              bike_name:
                type: string
              experience:
                type: integer
                format: int8
    Spot:
      content:
        application/json:
          schema:
            type: object
            required:
              - "user_id"
              - "name"
            properties:
              user_id:
                type: integer
                format: int64
              name:
                type: string
              image:
                type: string
              type:
                type: string
              address:
                type: string
              hp_url:
                type: string
              open_time:
                type: string
              off_day:
                type: string
              parking:
                type: boolean
              description:
                type: string
              lat:
                type: number
                format: float
              lng:
                type: number
                format: float
    Record:
      content:
        application/json:
          schema:
            type: object
            required:
              - "user_id"
              - "spot_id"
            properties:
              user_id:
                type: integer
                format: int64
              spot_id:
                type: integer
                format: int64
              date:
                type: string
                format: date
              weather:
                type: string
              temperature:
                type: string
              running_time:
                type: string
              distance:
                type: string
              description:
                type: string
    RecordLike:
      content:
        application/json:
          schema:
            type: object
            required:
              - "user_id"
              - "spot_id"
            properties:
              user_id:
                type: integer
                format: int64
              spot_id:
                type: integer
                format: int64
    Comment:
      content:
        application/json:
          schema:
            type: object
            required:
              - "user_id"
              - "spot_id"
            properties:
              user_id:
                type: integer
                format: int64
              spot_id:
                type: integer
                format: int64
              name:
                type: string
              text:
                type: string
    Bookmark:
      content:
        application/json:
          schema:
            type: object
            required:
              - "user_id"
              - "spot_id"
            properties:
              user_id:
                type: integer
                format: int64
              spot_id:
                type: integer
                format: int64

  schemas:
    User:
      type: object
      description: ユーザー
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        password:
          type: string
        name:
          type: string
        area:
          type: string
        prefecture:
          type: string
        url:
          type: string
        bike_name:
          type: string
        experience:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Spot:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        name:
          type: string
        image:
          type: string
        type:
          type: string
        address:
          type: string
        hp_url:
          type: string
        open_time:
          type: string
        off_day:
          type: string
        parking:
          type: boolean
        description:
          type: string
        lat:
          type: number
          format: float
        lng:
          type: number
          format: float
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Record:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        spot_id:
          type: integer
          format: int64
        date:
          type: string
          format: date
        weather:
          type: string
        temperature:
          type: string
        running_time:
          type: string
        distance:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    RecordLike:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        spot_id:
          type: integer
          format: int64
        created_at:
          type: string
          format: date-time

    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        spot_id:
          type: integer
          format: int64
        name:
          type: string
        text:
          type: string
        created_at:
          type: string
          format: date-time
    Bookmark:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        bookmark_id:
          type: integer
          format: int64
        created_at:
          type: string
          format: date-time
